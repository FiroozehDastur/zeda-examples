<defun name="hello_julia">
  <in name="implementation" type="string" place="implementation"/>
  <in name="julia_impl" type="string" place="julia_impl"/>
  <in name="fname" type="string" place="fname"/>

  <in name="input_file1" type="string" place="input_file1"/>
  <in name="input_file2" type="string" place="input_file2"/>
  <in name="output_dir" type="string" place="output_dir"/>

  <out name="output_file1" type="string" place="output_file1"/>
  <out name="output_file2" type="string" place="output_file2"/>

  <net>
    <place name="input_file1" type="string"/>
    <place name="input_file2" type="string"/>

    <place name="output_file1" type="string"/>
    <place name="output_file2" type="string"/>

    <place name="implementation" type="string"/>
    <place name="julia_impl" type="string"/>
    <place name="fname" type="string"/>
    <place name="output_dir" type="string"/>


    <transition name="hello_jl">
      <defun>
        <in name="in_file1" type="string"/>
        <in name="in_file2" type="string"/>

        <out name="out_file1" type="string"/>
        <out name="out_file2" type="string"/>

        <in name="implementation" type="string"/>
        <in name="julia_impl" type="string"/>
        <in name="fname" type="string"/>
        <in name="output_dir" type="string"/>

        <module name="hello_julia" function="operation (in_file1, in_file2, out_file1, out_file2, implementation, julia_impl, fname, output_dir)" require_function_unloads_without_rest="false">
          <cinclude href="zeda/executor.hpp"/>
          <cinclude href="iostream"/>
          <cinclude href="string"/>
          <cinclude href="vector"/>
          <code><![CDATA[
            std::vector<std::vector<std::string>> output = zeda::execute(implementation, julia_impl, fname, output_dir, {in_file1, in_file2}, 2);
            out_file1 = output[0][0];
            out_file2 = output[1][0];
          ]]></code>
        </module>
      </defun>

      <connect-in port="in_file1" place="input_file1"/>
      <connect-in port="in_file2" place="input_file2"/>

      <connect-out port="out_file1" place="output_file1"/>
      <connect-out port="out_file2" place="output_file2"/>

      <connect-in port="implementation" place="implementation"/>
      <connect-in port="julia_impl" place="julia_impl"/>
      <connect-in port="fname" place="fname"/>
      <connect-in port="output_dir" place="output_dir"/>

    </transition>
  </net>
</defun>
